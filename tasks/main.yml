---
# tasks file for apigee-opdk-setup-component
- name: Determine if Cache attributes is available
  stat:
    path: "{{ profile }}-cache.yml"
  register: cache_attrib

- name: Cache attributes attributes
  include_tasks: "{{ profile }}-cache.yml"
  when: cache_attrib.stat.exists

- block:
  - name: Install Apigee component {{ profile }} for Private Cloud {{ opdk_version }}
    become: yes
    command: '{{ apigee_setup }} -p {{ profile }} -f {{ opdk_installation_config_file }}'
    environment:
      http_proxy: "{{ http_proxy }}"
      https_proxy: "{{ https_proxy }}"
      no_proxy: "{{ no_proxy }}"
      PORT_TIMEOUT: '{{ port_timeout | default(60) }}'
      UP_TIMEOUT: '{{ up_timeout | default(60) }}'
    when: opdk_debug_mode is not defined or opdk_debug_mode | trim | lower == 'off'

  - name: DEBUG_MODE - Install Apigee component {{ profile }} for Private Cloud {{ opdk_version }}
    become: yes
    command: '/usr/bin/bash -x {{ apigee_setup }} -p {{ profile }} -f {{ opdk_installation_config_file }}'
    environment:
      http_proxy: "{{ http_proxy }}"
      https_proxy: "{{ https_proxy }}"
      no_proxy: "{{ no_proxy }}"
      PORT_TIMEOUT: '{{ port_timeout | default(60) }}'
      UP_TIMEOUT: '{{ up_timeout | default(60) }}'
    when: opdk_debug_mode is defined and opdk_debug_mode | trim | lower == 'on'
  rescue:
    - name: Determine if Rescue action is available
      stat:
        path: "{{ profile }}-rescue.yml"
      register: rescue

    - name: Rescue for Apigee component installation
      include_tasks: "{{ profile }}-rescue.yml"
      when: rescue.stat.exists

    - name: Rescue is not available
      fail:
         msg: 'Rescue is not available'
      when: rescue.stat.exists == false

- name: Wait for ready
  become: yes
  command: '{{ apigee_all }} wait_for_ready'
  when: validate_ready | default(true)
  environment:
    http_proxy: "{{ http_proxy }}"
    https_proxy: "{{ https_proxy }}"
    no_proxy: "{{ no_proxy }}"

- name: Validate component status
  become: yes
  command: '{{ apigee_all }} status'
  environment:
    http_proxy: "{{ http_proxy }}"
    https_proxy: "{{ https_proxy }}"
    no_proxy: "{{ no_proxy }}"

